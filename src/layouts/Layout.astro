---
import Footer from "../components/elements/Footer.astro";
import Navbar from "../components/elements/Navbar.astro";
import BackToTopButton from "../components/elements/BackToTopButton.astro";
export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content="Fortis">
    
    <title>Fortis - {title}</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Raleway:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />

    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-TBBGMFZFQG"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', 'G-TBBGMFZFQG');
    </script>
  </head>
  <body class="overflow-hidden overflow-y-auto bg-body">
    
    <script>
      // Immediate execution
      if (!localStorage.getItem('firstVisit')) {
        localStorage.setItem('firstVisit', 'true');
        if (window.location.pathname !== '/index.html') {
          window.location.href = '/index.html';
        }
      }
    </script>
    <Navbar />
    <slot />
  <message />
  <BackToTopButton /> <!-- Add this line before the closing body tag -->
  
  </body>

  <script>
    const slider = document.querySelector('.logo-scroll');
    let scrollAmount = 10;
    let isAutoScrolling = true;
    let timer;
  
    const step = () => {
      if (isAutoScrolling) {
        slider.scrollTo(scrollAmount++, 0);
  
        if (scrollAmount < slider.scrollWidth - slider.offsetWidth) {
          requestAnimationFrame(step);
        } else {
          scrollAmount = 0;
          setTimeout(() => requestAnimationFrame(step), 2000);
        }
      }
    };
  
    slider.addEventListener('pointerdown', () => {
      isAutoScrolling = false;
    });
  
    slider.addEventListener('pointerup', () => {
      clearTimeout(timer);
      timer = setTimeout(() => { isAutoScrolling = true; }, 2000);
    });
  
    requestAnimationFrame(step);
  </script>
  
  

  <script>
      var isMobile = {
          Android: function() {
              return navigator.userAgent.match(/Android/i);
          },
          iOS: function() {
              return navigator.userAgent.match(/iPhone|iPad|iPod/i);
          },
          any: function() {
              return (isMobile.Android() || isMobile.iOS());
          }
      };

      if(isMobile.any()){
          var contactLink = document.getElementById('contact-link');
          if(isMobile.iOS()){
              contactLink.href = "sms:+12406475694‬"; // Replace with your phone number
          } else if (isMobile.Android()) {
              contactLink.href = "sms:+12406475694"; // Replace with your phone number
          }
      }
  </script>
  <script>
      // Back to top functionality
      const backToTopBtn = document.getElementById('back-to-top-btn');

      window.addEventListener('scroll', () => {
          if (window.pageYOffset > 10) { // Show back-to-top button after scrolling down 100px
              backToTopBtn.classList.remove('hidden');
              backToTopBtn.classList.add('flex');
          } else {
              backToTopBtn.classList.remove('flex');
              backToTopBtn.classList.add('hidden');
          }
      });

      backToTopBtn.addEventListener('click', () => {
          window.scrollTo({
              top: 0,
              behavior: 'smooth'
          });
      });
  </script>
  <script>

    
    
    const switchTheme = document.querySelector(
      "[data-switch-theme]"
    ) as HTMLButtonElement;

    localStorage.setItem("appTheme", "light");
   

    const switchLang = document.querySelector("#language-switch") as HTMLButtonElement;
    const languageText = document.querySelector("#language-text");

    let isSwitching = false; // Flag to track if language switch is in progress

    if (switchLang && languageText) {
      switchLang.addEventListener("click", (e) => {
        e.preventDefault();

        if (!isSwitching) {
          isSwitching = true;

          const currentURL = new URL(window.location.href);
          const newURL = new URL(currentURL.origin);

          if (localStorage.getItem("appLang") === "en") {
            localStorage.setItem("appLang", "es");
            languageText.textContent = "Español";
            newURL.pathname = '/indexes.html';
          } else {
            localStorage.setItem("appLang", "en");
            languageText.textContent = "English";
            newURL.pathname = '/index.html';
          }

          window.location.href = newURL.href;

          setTimeout(() => {
            isSwitching = false; // Reset the switch flag after the delay
          }, 1000); // Set the delay time (in milliseconds) as needed
        }
      });
    }

    // Check the stored language and update the button text on page load
    if (localStorage.getItem("appLang") === "en") {
      languageText.textContent = "Español";
    } else {
      languageText.textContent = "English";
    }


    function updateLanguage() {
    const navItems = Array.from(document.querySelectorAll('.nav-item'));
    const language = localStorage.getItem("appLang");
    
    navItems.forEach(item => {
        const textEn = item.getAttribute('data-text-en');
        const textEs = item.getAttribute('data-text-es');
        
        if (language === "en") {
          item.textContent = textEn;
        } else {
          item.textContent = textEs;
        }
    });
  }
  
  window.addEventListener('load', () => {
    document.getElementById('language-switch').addEventListener('click', () => {
      updateLanguage();
    });
    
    updateLanguage();
  });


  </script>
  <script>
    const toggleMenu = document.querySelector(
      "[data-toggle-nav]"
    ) as HTMLButtonElement;
    const navbar = document.querySelector("[data-navbar]") as HTMLDivElement;
    const overlayNav = document.querySelector(
      "[data-nav-overlay]"
    ) as HTMLDivElement;
  
    // New code goes here
    const navItems = Array.from(document.querySelectorAll('.nav-item'));
    navItems.forEach((navItem) => {
      navItem.addEventListener('click', () => {
        if (toggleMenu.getAttribute('data-open-nav') === 'true') {
          toggleMenu.setAttribute('data-open-nav', 'false');
          overlayNav.setAttribute('data-is-visible', 'false');
          document.body.classList.remove('!overflow-y-hidden');
          navbar.style.height = '0px';
        }
      });
    });
    // End of new code
  
    if (toggleMenu) {
      toggleMenu.addEventListener("click", (e) => {
        e.preventDefault();
        if (toggleMenu.getAttribute("data-open-nav") === "false") {
          toggleMenu.setAttribute("data-open-nav", "true");
          overlayNav.setAttribute("data-is-visible", "true");
          document.body.classList.add("!overflow-y-hidden");
          navbar.style.height = `${navbar.scrollHeight}px`
  
        } else {
          toggleMenu.setAttribute("data-open-nav", "false");
          overlayNav.setAttribute("data-is-visible", "false");
          document.body.classList.remove("!overflow-y-hidden");
          navbar.style.height = "0px";
        }
      });
  
      overlayNav.addEventListener("click", (e) => {
        e.preventDefault();
        toggleMenu.setAttribute("data-open-nav", "false");
        overlayNav.setAttribute("data-is-visible", "false");
        document.body.classList.remove("!overflow-y-hidden");
        navbar.style.height = "0px";
      });
    }
  </script>
  
</html>
<style is:global>
  :root {
    --color-bg: 255 255 255;
    --color-border: 255 255 255;
    --color-box: 255 255 255;
    --box-border: 229 231 235;
    --box-sd: 226 232 240 / 0.5;
	--heading-1:  23 37 84;
	--heading-2: 31 41 55;
	--heading-3: 55 65 81;
  }

  .dark {
    --color-bg: 3 7 18;
    --color-box: 17 24 39;
    --box-border: 243 244 246/0.1;
    --box-sd: transparent;

	
	--heading-1:  255 255 255;
	--heading-2:  243 244 246;
	--heading-3:  209 213 219;
  }

  html{
    scroll-behavior: smooth;
  }
  body {
    font-family: "Raleway", sans-serif;
  }

  [data-toggle-nav][data-open-nav="true"] #line1 {
    transform: translateY(0.375rem) rotate(40deg);
  }
  [data-toggle-nav][data-open-nav="true"] #line2 {
    transform: scaleX(0);
    opacity: 0;
  }
  [data-toggle-nav][data-open-nav="true"] #line3 {
    transform: translateY(-0.375rem) rotate(-40deg);
  }

  
  [data-nav-overlay][data-is-visible="true"] {
    visibility: visible;
    display: flex;
  }
</style>
